apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: add-filter-chain
spec:
  workloadSelector:
    labels:
      app: productpage
  configPatches:
  - applyTo: FILTER_CHAIN
    match:
      listener:
        name: virtualInbound
    patch:
      operation: ADD
      value:
        filter_chain_match:
          destination_port: 9080
          transport_protocol: tls
          application_protocols:
          - "http/1.1"
          - "h2c"
        filters:
        - name: istio.metadata_exchange
          typed_config:
            "@type": type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
            protocol: istio-peer-exchange
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: inbound_0.0.0.0_9080
            route_config:
              name: inbound|9080||
              virtual_hosts:
              - name: inbound|http|9080
                domains:
                - "*"
                routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: inbound|9080||
                    timeout: 0s
                    max_stream_duration:
                      max_stream_duration: 0s
                      grpc_timeout_header_max: 0s
                  decorator:
                    operation: productpage.istio.svc.cluster.local:9080/*
                  name: default
              validate_clusters: false
            http_filters:
            - name: istio.metadata_exchange
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                config:
                  vm_config:
                    runtime: envoy.wasm.runtime.null
                    code:
                      local:
                        inline_string: envoy.wasm.metadata_exchange
                  configuration:
                    "@type": type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
            - name: envoy.filters.http.fault
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
            - name: envoy.filters.http.cors
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
            - name: istio.stats
              typed_config:
                "@type": type.googleapis.com/udpa.type.v1.TypedStruct
                type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                value:
                  config:
                    root_id: stats_inbound
                    vm_config:
                      vm_id: stats_inbound
                      runtime: envoy.wasm.runtime.null
                      code:
                        local:
                          inline_string: envoy.wasm.stats
                    configuration:
                      "@type": type.googleapis.com/google.protobuf.StringValue
                      value: |
                        {
                         "debug": "false",
                         "stat_prefix": "istio",
                         "disable_host_header_fallback": true,
                         "metrics": [
                         {
                         "dimensions": {
                         "destination_cluster": "node.metadata['CLUSTER_ID']",
                         "source_cluster": "downstream_peer.cluster_id"
                         }
                         }
                         ]
                        }
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            tracing:
              client_sampling:
                value: 100
              random_sampling:
                value: 100
              overall_sampling:
                value: 100
              custom_tags:
              - tag: istio.authorization.dry_run.allow_policy.name
                metadata:
                  kind:
                    request: {}
                  metadata_key:
                    key: envoy.filters.http.rbac
                    path:
                    - key: istio_dry_run_allow_shadow_effective_policy_id
              - tag: istio.authorization.dry_run.allow_policy.result
                metadata:
                  kind:
                    request: {}
                  metadata_key:
                    key: envoy.filters.http.rbac
                    path:
                    - key: istio_dry_run_allow_shadow_engine_result
              - tag: istio.authorization.dry_run.deny_policy.name
                metadata:
                  kind:
                    request: {}
                  metadata_key:
                    key: envoy.filters.http.rbac
                    path:
                    - key: istio_dry_run_deny_shadow_effective_policy_id
              - tag: istio.authorization.dry_run.deny_policy.result
                metadata:
                  kind:
                    request: {}
                  metadata_key:
                    key: envoy.filters.http.rbac
                    path:
                    - key: istio_dry_run_deny_shadow_engine_result
              - tag: istio.canonical_revision
                literal:
                  value: v1
              - tag: istio.canonical_service
                literal:
                  value: productpage
              - tag: istio.mesh_id
                literal:
                  value: cluster.local
              - tag: istio.namespace
                literal:
                  value: istio
            server_name: istio-envoy
            access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: "/dev/stdout"
                log_format:
                  text_format_source:
                    inline_string: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                      %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS%
                      %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                      %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                      "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                      "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS%
                      %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%'
            use_remote_address: false
            forward_client_cert_details: APPEND_FORWARD
            set_current_client_cert_details:
              subject: true
              dns: true
              uri: true
            upgrade_configs:
            - upgrade_type: websocket
            stream_idle_timeout: 0s
            normalize_path: true
            request_id_extension:
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
                use_request_id_for_trace_sampling: true
            path_with_escaped_slashes_action: KEEP_UNCHANGED
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              tls_params:
                tls_minimum_protocol_version: TLSv1_2
                tls_maximum_protocol_version: TLSv1_3
                cipher_suites:
                - ECDHE-ECDSA-AES256-GCM-SHA384
                - ECDHE-RSA-AES256-GCM-SHA384
                - ECDHE-ECDSA-AES128-GCM-SHA256
                - ECDHE-RSA-AES128-GCM-SHA256
                - AES256-GCM-SHA384
                - AES128-GCM-SHA256
              alpn_protocols:
              - h2
              - http/1.1
              tls_certificate_sds_secret_configs:
              - name: default
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                    - envoy_grpc:
                        cluster_name: sds-grpc
                    set_node_on_first_message_only: true
                    transport_api_version: V3
                  initial_fetch_timeout: 0s
                  resource_api_version: V3
              combined_validation_context:
                default_validation_context:
                  match_subject_alt_names:
                  - prefix: spiffe://cluster.local/
                validation_context_sds_secret_config:
                  name: ROOTCA
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                      - envoy_grpc:
                          cluster_name: sds-grpc
                      set_node_on_first_message_only: true
                      transport_api_version: V3
                    initial_fetch_timeout: 0s
                    resource_api_version: V3
            require_client_certificate: true
        name: 0.0.0.0_9080

